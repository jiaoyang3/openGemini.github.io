import{_ as i,X as l,Y as o,$ as e,a1 as a,Z as t,a3 as n,C as d}from"./framework-1e2d737a.js";const p={},c=n(`<hr><h2 id="title-使用-gemix-部署order-5" tabindex="-1"><a class="header-anchor" href="#title-使用-gemix-部署order-5" aria-hidden="true">#</a> title: 使用 gemix 部署 order: 5</h2><h1 id="使用-gemix-部署-opengemini-集群" tabindex="-1"><a class="header-anchor" href="#使用-gemix-部署-opengemini-集群" aria-hidden="true">#</a> 使用 gemix 部署 openGemini 集群</h1><p>gemix 是 openGemini 官方开发的集群运维工具，gemix cluster 是 gemix 提供的使用 Golang 编写的集群管理组件，通过 gemix cluster 组件就可以进行日常的运维工作，包括安装、启动、关闭、卸载、升级 openGemini 集群，以及管理 openGemini 集群参数。</p><p>目前 gemix 可以支持部署 openGemini cluster 以及监控系统。本文将介绍不同集群拓扑的具体部署步骤。</p><h2 id="第-1-步-软硬件环境要求及前置检查" tabindex="-1"><a class="header-anchor" href="#第-1-步-软硬件环境要求及前置检查" aria-hidden="true">#</a> 第 1 步：软硬件环境要求及前置检查</h2><p><a href="./software_and_hardware_requirements">软硬件环境要求</a></p><p><a href="./check_before_deployment">环境与系统配置检查</a></p><h2 id="第-2-步-在执行机上安装-gemix-组件" tabindex="-1"><a class="header-anchor" href="#第-2-步-在执行机上安装-gemix-组件" aria-hidden="true">#</a> 第 2 步：在执行机上安装 gemix 组件</h2><p>在执行机上部署 gemix 组件有两种方式：在线部署和离线部署。</p><h3 id="在线部署" tabindex="-1"><a class="header-anchor" href="#在线部署" aria-hidden="true">#</a> 在线部署</h3><ol><li><p>执行如下命令安装 gemix 工具：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">install</span> github.com/openGemini/gemix@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>按如下步骤设置 gemix 环境变量：</p><p>i. 重新声明全局环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> .bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ii. 确认 gemix 工具是否安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">which</span> gemix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="离线部署" tabindex="-1"><a class="header-anchor" href="#离线部署" aria-hidden="true">#</a> 离线部署</h3>`,13),r={href:"https://github.com/openGemini/openGemini-UP/releases",target:"_blank",rel:"noopener noreferrer"},u=n(`<p>解压，将 <code>gemix</code> 工具放到 <code>usr/local/bin</code>下面。</p><h2 id="第-3-步-初始化集群拓扑文件" tabindex="-1"><a class="header-anchor" href="#第-3-步-初始化集群拓扑文件" aria-hidden="true">#</a> 第 3 步：初始化集群拓扑文件</h2><p>执行如下命令，生成集群初始化配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster template <span class="token operator">&gt;</span> topology.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行 vi topology.yaml，查看配置文件的内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token key atrule">ssh_port</span><span class="token punctuation">:</span> <span class="token number">22</span>
  <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">&quot;gemini&quot;</span>
  <span class="token key atrule">deploy_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-deploy&quot;</span>
  <span class="token key atrule">log_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-deploy/logs&quot;</span>
  <span class="token key atrule">data_dir</span><span class="token punctuation">:</span> <span class="token string">&quot;/gemini-data/data&quot;</span>
<span class="token key atrule">server_configs</span><span class="token punctuation">:</span>
<span class="token key atrule">ts-meta</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
<span class="token key atrule">ts-sql</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
<span class="token key atrule">ts-store</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.1
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.2
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.1.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下表列出了常用的 7 种场景，请根据链接中的拓扑说明以及配置文件模板配置<code>topology.yaml</code>。如果有其他组合场景的需求，请根据多个模板自行调整。</p><table><thead><tr><th style="text-align:left;">场景</th><th style="text-align:left;">配置任务</th><th style="text-align:left;">配置文件模板</th><th style="text-align:left;">拓扑说明</th></tr></thead><tbody><tr><td style="text-align:left;">OLAP 业务</td><td style="text-align:left;"><a href="./topology/minimal_deployment_topology">部署最小拓扑架构</a></td><td style="text-align:left;"><a href="./topology/minimal_deployment_topology#%E6%8B%93%E6%89%91%E6%A8%A1%E7%89%88">简单最小配置模板</a> <a href="./topology/minimal_deployment_topology#%E6%8B%93%E6%89%91%E6%A8%A1%E7%89%88">详细最小配置模板</a></td><td style="text-align:left;">最小集群拓扑，包括 ts-meta、ts-sql、ts-store。</td></tr><tr><td style="text-align:left;">OLAP 业务+监控</td><td style="text-align:left;"><a href="./topology/minimal_deployment_topology">部署最小拓扑架构</a></td><td style="text-align:left;"></td><td style="text-align:left;">最小集群拓扑，包括 ts-meta、ts-sql、ts-store、ts-store、grafana</td></tr></tbody></table><h2 id="第-4-步-执行安装命令" tabindex="-1"><a class="header-anchor" href="#第-4-步-执行安装命令" aria-hidden="true">#</a> 第 4 步：执行安装命令</h2><div class="hint-container info"><p class="hint-container-title">Info</p><p>通过 gemix 进行集群部署可以使用密钥或者交互密码方式来进行安全认证：</p><ul><li>如果是密钥方式，可以通过 <code>-k</code> 或者 <code>--key</code> 来指定密钥的路径。</li><li>如果是密码方式，可以通过 <code>-p</code> 进入密码交互窗口。</li><li>如果已经配置免密登录目标机，则不需填写认证。</li></ul><p>一般情况下 gemix 会在目标机器上创建 topology.yaml 中约定的用户和组，以下情况例外：</p><ul><li><code>topology.yaml</code> 中设置的用户名在目标机器上已存在。</li><li>在命令行上使用了参数 <code>--skip-create-user</code> 明确指定跳过创建用户的步骤。</li></ul></div><p>执行部署命令前，先使用 <code>check</code> 及 <code>check --apply</code> 命令检查和自动修复集群存在的潜在风险：</p><ol><li><p>检查集群存在的潜在风险:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster check ./topology.yaml <span class="token parameter variable">--user</span> root <span class="token punctuation">[</span>-p<span class="token punctuation">]</span> <span class="token punctuation">[</span>-i /home/root/.ssh/gcp_rsa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>部署 openGemini 集群:</p></li></ol><p>使用以下命令会自动下载openGemini v1.1.1版本包到执行机，然后拷贝到所有的实例节点中，并初始化好启动的配置文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster <span class="token function">install</span> gemini-test v1.1.1 ./topology.yaml <span class="token parameter variable">--user</span> root <span class="token punctuation">[</span>--password<span class="token punctuation">]</span> <span class="token punctuation">[</span>--key /home/root/.ssh/id_rsa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上安装示例中：</p>`,15),h=e("li",null,[e("code",null,"gemini-test"),a(" 为安装的集群名称。")],-1),m=e("code",null,"v1.1.1",-1),g={href:"https://github.com/openGemini/openGemini/releases/latest",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,[a("初始化配置文件为 "),e("code",null,"topology.yaml"),a("。")],-1),k=e("li",null,[e("code",null,"--user root"),a(" 表示通过 root 用户登录到目标主机完成集群部署，该用户需要有 ssh 到目标机器的权限，并且在目标机器有 sudo 权限。也可以用其他有 ssh 和 sudo 权限的用户完成部署。")],-1),b=e("li",null,"[--key] 及 [--password] 为可选项，如果已经配置免密登录目标机，则不需填写。否则选择其一即可，[--key] 为可登录到目标机的 root 用户（或 --user 指定的其他用户）的私钥，也可使用 [--password] 输入该用户的密码。",-1),x=n(`<p>预期日志结尾输出 Deployed cluster <code>gemini-test</code> successfully 关键词，表示部署成功。</p><h2 id="第-5-步-查看-gemix-管理的集群情况" tabindex="-1"><a class="header-anchor" href="#第-5-步-查看-gemix-管理的集群情况" aria-hidden="true">#</a> 第 5 步：查看 gemix 管理的集群情况</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>gemix 支持管理多个 openGemioni 集群，该命令会输出当前通过 gemix cluster 管理的所有集群信息，包括集群名称、部署用户、版本、密钥信息等。</p><h2 id="第-6-步-检查部署的-opengemini-集群情况" tabindex="-1"><a class="header-anchor" href="#第-6-步-检查部署的-opengemini-集群情况" aria-hidden="true">#</a> 第 6 步：检查部署的 openGemini 集群情况</h2><p>例如，执行如下命令检查 <code>gemini-test</code> 集群情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster display gemini-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预期输出包括 <code>gemini-test</code> 集群中实例 ID、角色、主机、监听端口和状态（由于还未启动，所以状态为 Down/inactive）、目录信息。</p><h2 id="第-7-步-启动集群" tabindex="-1"><a class="header-anchor" href="#第-7-步-启动集群" aria-hidden="true">#</a> 第 7 步：启动集群</h2><p>使用以下命令会将所有实例节点的相关进程启动。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster start gemini-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预期结果输出 <code>Started cluster gemini-test successfully</code>，表示启动成功。</p><h2 id="第-8-步-验证集群运行状态" tabindex="-1"><a class="header-anchor" href="#第-8-步-验证集群运行状态" aria-hidden="true">#</a> 第 8 步：验证集群运行状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gemix cluster display gemini-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>预期结果输出：各节点 Status 状态信息为 <code>Up</code> 说明集群状态正常。</p><h2 id="探索更多" tabindex="-1"><a class="header-anchor" href="#探索更多" aria-hidden="true">#</a> 探索更多</h2><p>如果你使用kubernetes部署了 openGemini，接下来可参阅以下文档：</p><ul><li><a href="/zh/deploy-on-k8s/quick_start/get_started">在 Kubernetes 上部署 openGemini</a></li></ul>`,18);function y(_,f){const s=d("ExternalLinkIcon");return l(),o("div",null,[c,e("p",null,[a("在"),e("a",r,[a("官方下载页面"),t(s)]),a("选择对应版本的 gemix 离线镜像包。")]),u,e("ul",null,[h,e("li",null,[m,a(" 为安装的集群版本，可以通过 "),e("a",g,[a("https://github.com/openGemini/openGemini/releases/latest"),t(s)]),a(" 来查看 gemix 支持的最新可用版本。")]),v,k,b]),x])}const q=i(p,[["render",y],["__file","production_deployment_using_gemix.html.vue"]]);export{q as default};
